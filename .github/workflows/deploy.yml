name: Deploy code changes that were merged with master to production

# Controls when the action will run. 
on:
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:       
      - uses: actions/checkout@v2
      - name: Run web application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }} 
          key: ${{ secrets.SSH_KEY }} 
          username: ${{ secrets.SSH_USERNAME }} 
          port: ${{ secrets.SSH_PORT }} 
          script_stop: true
          script: | 
            # Update production repo
            cd ~/repo/service
            git clean -xdf
            git fetch origin master 
            git reset --hard origin/master 
            echo 'Finished updating the production repo'
            
            # Set up secret production database settings locally
            # Secrets
            export DATABASE_NAME=${{ secrets.DATABASE_NAME }}
            export DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
            export DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
            export DATABASE_HOST=${{ secrets.DATABASE_HOST }}
            export DATABASE_PORT=${{ secrets.DATABASE_PORT }}
            # ** Django and gunicorn environment variables are created inside $DJANGO_VENV_DIR/bin/gunicorn_start
            # ** Some hardcoded values exist inside sites-available/autopros.app
            # ** Other non-secrets sourced inside ~/.bashrc **
            echo 'Finished setting environment variables locally'

            # Install Django project dependencies locally in a virtualenv
            cd auto_pros_django
            pipenv install
            source "$(pipenv --venv)/bin/activate"
            echo 'Finished installing dependencies into virtual environment'
            
            # Update database schema
            python manage.py makemigrations
            python manage.py migrate
            echo 'Finished updating database schema'

            # Collect static files for django (images, css, etc)
            python manage.py collectstatic
            echo 'Finished creating static files'

            #Deactivate pipenv
            deactivate

            # Install vue dependencies
            cd ../auto_pros_vue
            npm install
            echo 'Finished installing vue dependencies'

            # Create production build of vue project
            npm run build
            echo 'Finished creating vue production build'
            
            # Refresh backend and frontend
            cd ~
            sudo /bin/systemctl restart nginx.service
            supervisorctl restart auto_pros_django
            echo 'Finished refreshing backend and frontend'

            echo 'Completed deployment to production successfully'
            
            
            
     
